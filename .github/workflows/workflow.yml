name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
jobs:
  delete-ec2:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Delete EC2
        id: delete-code-deploy-tag
        run: |
          aws ec2 terminate-instances \
            --instance-ids `aws ec2 describe-instances \
            --filters Name=tag:name,Values=ec2-deploy-cvna \
            --query Reservations[].Instances[].InstanceId --output text`

  create-ec2:
    runs-on: ubuntu-latest
    needs: [delete-ec2]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Install codedeploy.sh
        id: wget-install-codedeploy
        run: wget https://raw.githubusercontent.com/G4L1T0/install-codedeploy/main/install-codedeploy.sh && chmod +x install-codedeploy.sh

      - name: Create EC2
        id: create-ec2-tags
        run: |
          aws ec2 run-instances \
            --image-id ami-0629230e074c580f2 \
            --count 1 \
            --instance-type t2.micro \
            --key-name new-par-aws \
            --security-group-ids sg-0d40b040556c42d54 \
            --subnet-id subnet-06166ec0280d94c08 \
            --iam-instance-profile Name=CodeDeploy_EC2Role \
            --user-data file://install-codedeploy.sh \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=name,Value=ec2-deploy-cvna}]'

  sleep-jobs:
    runs-on: ubuntu-latest
    needs: [create-ec2]
    if: github.ref == 'refs/heads/main'
    steps:
       - name: Sleep for 1min
         uses: juliangruber/sleep-action@v1
         with:
           time: 1m

  deployment-codedeploy:
    runs-on: ubuntu-latest
    needs: [sleep-jobs]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name deploy-app-name \
            --deployment-group-name grupo-deploy-app-name \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}

